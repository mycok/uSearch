syntax = "proto3";
option go_package = "/indexproto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Document represents an indexed document.
message Document {
    bytes link_id = 1;
    string url = 2;
    string title = 3;
    string content = 4;
    google.protobuf.Timestamp indexed_at = 5;
}

// Query represents a search query.
message Query {
    Type type = 1;
    string expression = 2;
    uint64 offset = 3;

    enum Type {
        MATCH = 0;
        PHRASE = 1;
    }
}

// QueryResult contains either the total count of results for a query or a
// single document from the resultset.
message QueryResult {
    oneof result {
        uint64 doc_count = 1;
        Document doc = 2; 
    }
}

// UpdateScoreRequest defines the parameters for the UpdateScore RPC.
message UpdateScoreRequest {
    bytes link_id = 1;
    double page_rank_score = 2;
}

service TextIndexer {
    // Index adds a new document or updates an existing index entry
	// in case of an existing document.
    rpc Index(Document) returns (Document);

    // Search the index for a particular query and stream the results back to 
    // the client. The first response will include the total result count while
    // all subsequent responses will include documents from the resultset.
    rpc Search(Query) returns (stream QueryResult);

    // UpdateScore updates the PageRank score for a document with the
	// specified link ID.
    rpc UpdateScore(UpdateScoreRequest) returns (google.protobuf.Empty);
}
